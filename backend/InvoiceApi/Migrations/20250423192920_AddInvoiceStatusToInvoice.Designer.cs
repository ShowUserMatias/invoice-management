// <auto-generated />
using System;
using InvoiceApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250423192920_AddInvoiceStatusToInvoice")]
    partial class AddInvoiceStatusToInvoice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("InvoiceApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerRun")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InvoiceApi.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoicePaymentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvoiceStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoicePaymentId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceApi.Models.InvoiceCreditNote", b =>
                {
                    b.Property<int>("InvoiceCreditNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CreditNoteAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreditNoteDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreditNoteNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceCreditNoteId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceCreditNotes");
                });

            modelBuilder.Entity("InvoiceApi.Models.InvoiceDetail", b =>
                {
                    b.Property<int>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("InvoiceApi.Models.InvoicePayment", b =>
                {
                    b.Property<int>("InvoicePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("TEXT");

                    b.HasKey("InvoicePaymentId");

                    b.ToTable("InvoicePayments");
                });

            modelBuilder.Entity("InvoiceApi.Models.Invoice", b =>
                {
                    b.HasOne("InvoiceApi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceApi.Models.InvoicePayment", "InvoicePayment")
                        .WithMany()
                        .HasForeignKey("InvoicePaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("InvoicePayment");
                });

            modelBuilder.Entity("InvoiceApi.Models.InvoiceCreditNote", b =>
                {
                    b.HasOne("InvoiceApi.Models.Invoice", null)
                        .WithMany("InvoiceCreditNotes")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("InvoiceApi.Models.InvoiceDetail", b =>
                {
                    b.HasOne("InvoiceApi.Models.Invoice", null)
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("InvoiceApi.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceCreditNotes");

                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
